// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package derivativesv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/api/cosmos/orm/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Params         protoreflect.MessageDescriptor
	fd_Params_stopped protoreflect.FieldDescriptor
)

func init() {
	file_derivatives_state_proto_init()
	md_Params = File_derivatives_state_proto.Messages().ByName("Params")
	fd_Params_stopped = md_Params.Fields().ByName("stopped")
}

var _ protoreflect.Message = (*fastReflection_Params)(nil)

type fastReflection_Params Params

func (x *Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Params)(x)
}

func (x *Params) slowProtoReflect() protoreflect.Message {
	mi := &file_derivatives_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Params_messageType fastReflection_Params_messageType
var _ protoreflect.MessageType = fastReflection_Params_messageType{}

type fastReflection_Params_messageType struct{}

func (x fastReflection_Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Params)(nil)
}
func (x fastReflection_Params_messageType) New() protoreflect.Message {
	return new(fastReflection_Params)
}
func (x fastReflection_Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Params) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Params) Type() protoreflect.MessageType {
	return _fastReflection_Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Params) New() protoreflect.Message {
	return new(fastReflection_Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Params) Interface() protoreflect.ProtoMessage {
	return (*Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Stopped != false {
		value := protoreflect.ValueOfBool(x.Stopped)
		if !f(fd_Params_stopped, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Params.stopped":
		return x.Stopped != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Params"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Params.stopped":
		x.Stopped = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Params"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "matrix.derivatives.v1.Params.stopped":
		value := x.Stopped
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Params"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Params.stopped":
		x.Stopped = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Params"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Params.stopped":
		panic(fmt.Errorf("field stopped of message matrix.derivatives.v1.Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Params"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Params.stopped":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Params"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in matrix.derivatives.v1.Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Stopped {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Stopped {
			i--
			if x.Stopped {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Stopped", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Stopped = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Position                                         protoreflect.MessageDescriptor
	fd_Position_address                                 protoreflect.FieldDescriptor
	fd_Position_pair                                    protoreflect.FieldDescriptor
	fd_Position_size                                    protoreflect.FieldDescriptor
	fd_Position_margin                                  protoreflect.FieldDescriptor
	fd_Position_open_notional                           protoreflect.FieldDescriptor
	fd_Position_last_update_cumulative_premium_fraction protoreflect.FieldDescriptor
	fd_Position_liquidity_history_index                 protoreflect.FieldDescriptor
	fd_Position_block_number                            protoreflect.FieldDescriptor
)

func init() {
	file_derivatives_state_proto_init()
	md_Position = File_derivatives_state_proto.Messages().ByName("Position")
	fd_Position_address = md_Position.Fields().ByName("address")
	fd_Position_pair = md_Position.Fields().ByName("pair")
	fd_Position_size = md_Position.Fields().ByName("size")
	fd_Position_margin = md_Position.Fields().ByName("margin")
	fd_Position_open_notional = md_Position.Fields().ByName("open_notional")
	fd_Position_last_update_cumulative_premium_fraction = md_Position.Fields().ByName("last_update_cumulative_premium_fraction")
	fd_Position_liquidity_history_index = md_Position.Fields().ByName("liquidity_history_index")
	fd_Position_block_number = md_Position.Fields().ByName("block_number")
}

var _ protoreflect.Message = (*fastReflection_Position)(nil)

type fastReflection_Position Position

func (x *Position) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Position)(x)
}

func (x *Position) slowProtoReflect() protoreflect.Message {
	mi := &file_derivatives_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Position_messageType fastReflection_Position_messageType
var _ protoreflect.MessageType = fastReflection_Position_messageType{}

type fastReflection_Position_messageType struct{}

func (x fastReflection_Position_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Position)(nil)
}
func (x fastReflection_Position_messageType) New() protoreflect.Message {
	return new(fastReflection_Position)
}
func (x fastReflection_Position_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Position
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Position) Descriptor() protoreflect.MessageDescriptor {
	return md_Position
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Position) Type() protoreflect.MessageType {
	return _fastReflection_Position_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Position) New() protoreflect.Message {
	return new(fastReflection_Position)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Position) Interface() protoreflect.ProtoMessage {
	return (*Position)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Position) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_Position_address, value) {
			return
		}
	}
	if x.Pair != "" {
		value := protoreflect.ValueOfString(x.Pair)
		if !f(fd_Position_pair, value) {
			return
		}
	}
	if x.Size != "" {
		value := protoreflect.ValueOfString(x.Size)
		if !f(fd_Position_size, value) {
			return
		}
	}
	if x.Margin != "" {
		value := protoreflect.ValueOfString(x.Margin)
		if !f(fd_Position_margin, value) {
			return
		}
	}
	if x.OpenNotional != "" {
		value := protoreflect.ValueOfString(x.OpenNotional)
		if !f(fd_Position_open_notional, value) {
			return
		}
	}
	if x.LastUpdateCumulativePremiumFraction != "" {
		value := protoreflect.ValueOfString(x.LastUpdateCumulativePremiumFraction)
		if !f(fd_Position_last_update_cumulative_premium_fraction, value) {
			return
		}
	}
	if x.LiquidityHistoryIndex != int64(0) {
		value := protoreflect.ValueOfInt64(x.LiquidityHistoryIndex)
		if !f(fd_Position_liquidity_history_index, value) {
			return
		}
	}
	if x.BlockNumber != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockNumber)
		if !f(fd_Position_block_number, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Position) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Position.address":
		return x.Address != ""
	case "matrix.derivatives.v1.Position.pair":
		return x.Pair != ""
	case "matrix.derivatives.v1.Position.size":
		return x.Size != ""
	case "matrix.derivatives.v1.Position.margin":
		return x.Margin != ""
	case "matrix.derivatives.v1.Position.open_notional":
		return x.OpenNotional != ""
	case "matrix.derivatives.v1.Position.last_update_cumulative_premium_fraction":
		return x.LastUpdateCumulativePremiumFraction != ""
	case "matrix.derivatives.v1.Position.liquidity_history_index":
		return x.LiquidityHistoryIndex != int64(0)
	case "matrix.derivatives.v1.Position.block_number":
		return x.BlockNumber != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Position"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Position does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Position) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Position.address":
		x.Address = ""
	case "matrix.derivatives.v1.Position.pair":
		x.Pair = ""
	case "matrix.derivatives.v1.Position.size":
		x.Size = ""
	case "matrix.derivatives.v1.Position.margin":
		x.Margin = ""
	case "matrix.derivatives.v1.Position.open_notional":
		x.OpenNotional = ""
	case "matrix.derivatives.v1.Position.last_update_cumulative_premium_fraction":
		x.LastUpdateCumulativePremiumFraction = ""
	case "matrix.derivatives.v1.Position.liquidity_history_index":
		x.LiquidityHistoryIndex = int64(0)
	case "matrix.derivatives.v1.Position.block_number":
		x.BlockNumber = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Position"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Position does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Position) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "matrix.derivatives.v1.Position.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.Position.pair":
		value := x.Pair
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.Position.size":
		value := x.Size
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.Position.margin":
		value := x.Margin
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.Position.open_notional":
		value := x.OpenNotional
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.Position.last_update_cumulative_premium_fraction":
		value := x.LastUpdateCumulativePremiumFraction
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.Position.liquidity_history_index":
		value := x.LiquidityHistoryIndex
		return protoreflect.ValueOfInt64(value)
	case "matrix.derivatives.v1.Position.block_number":
		value := x.BlockNumber
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Position"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Position does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Position) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Position.address":
		x.Address = value.Interface().(string)
	case "matrix.derivatives.v1.Position.pair":
		x.Pair = value.Interface().(string)
	case "matrix.derivatives.v1.Position.size":
		x.Size = value.Interface().(string)
	case "matrix.derivatives.v1.Position.margin":
		x.Margin = value.Interface().(string)
	case "matrix.derivatives.v1.Position.open_notional":
		x.OpenNotional = value.Interface().(string)
	case "matrix.derivatives.v1.Position.last_update_cumulative_premium_fraction":
		x.LastUpdateCumulativePremiumFraction = value.Interface().(string)
	case "matrix.derivatives.v1.Position.liquidity_history_index":
		x.LiquidityHistoryIndex = value.Int()
	case "matrix.derivatives.v1.Position.block_number":
		x.BlockNumber = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Position"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Position does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Position) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Position.address":
		panic(fmt.Errorf("field address of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.pair":
		panic(fmt.Errorf("field pair of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.size":
		panic(fmt.Errorf("field size of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.margin":
		panic(fmt.Errorf("field margin of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.open_notional":
		panic(fmt.Errorf("field open_notional of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.last_update_cumulative_premium_fraction":
		panic(fmt.Errorf("field last_update_cumulative_premium_fraction of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.liquidity_history_index":
		panic(fmt.Errorf("field liquidity_history_index of message matrix.derivatives.v1.Position is not mutable"))
	case "matrix.derivatives.v1.Position.block_number":
		panic(fmt.Errorf("field block_number of message matrix.derivatives.v1.Position is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Position"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Position does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Position) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "matrix.derivatives.v1.Position.address":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.Position.pair":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.Position.size":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.Position.margin":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.Position.open_notional":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.Position.last_update_cumulative_premium_fraction":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.Position.liquidity_history_index":
		return protoreflect.ValueOfInt64(int64(0))
	case "matrix.derivatives.v1.Position.block_number":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.Position"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.Position does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Position) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in matrix.derivatives.v1.Position", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Position) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Position) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Position) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Position) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Position)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pair)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Size)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Margin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OpenNotional)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LastUpdateCumulativePremiumFraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LiquidityHistoryIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.LiquidityHistoryIndex))
		}
		if x.BlockNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockNumber))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Position)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockNumber))
			i--
			dAtA[i] = 0x40
		}
		if x.LiquidityHistoryIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LiquidityHistoryIndex))
			i--
			dAtA[i] = 0x38
		}
		if len(x.LastUpdateCumulativePremiumFraction) > 0 {
			i -= len(x.LastUpdateCumulativePremiumFraction)
			copy(dAtA[i:], x.LastUpdateCumulativePremiumFraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LastUpdateCumulativePremiumFraction)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.OpenNotional) > 0 {
			i -= len(x.OpenNotional)
			copy(dAtA[i:], x.OpenNotional)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OpenNotional)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Margin) > 0 {
			i -= len(x.Margin)
			copy(dAtA[i:], x.Margin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Margin)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Size) > 0 {
			i -= len(x.Size)
			copy(dAtA[i:], x.Size)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Size)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Pair) > 0 {
			i -= len(x.Pair)
			copy(dAtA[i:], x.Pair)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pair)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Position)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Position: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Position: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pair", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pair = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Size", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Size = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Margin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Margin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OpenNotional", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OpenNotional = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastUpdateCumulativePremiumFraction", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LastUpdateCumulativePremiumFraction = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LiquidityHistoryIndex", wireType)
				}
				x.LiquidityHistoryIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LiquidityHistoryIndex |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockNumber", wireType)
				}
				x.BlockNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockNumber |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_VirtualAMMInfo_3_list)(nil)

type _VirtualAMMInfo_3_list struct {
	list *[]string
}

func (x *_VirtualAMMInfo_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualAMMInfo_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VirtualAMMInfo_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VirtualAMMInfo_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualAMMInfo_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VirtualAMMInfo at list field CumulativePremiumFractions as it is not of Message kind"))
}

func (x *_VirtualAMMInfo_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VirtualAMMInfo_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VirtualAMMInfo_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_VirtualAMMInfo                              protoreflect.MessageDescriptor
	fd_VirtualAMMInfo_pair                         protoreflect.FieldDescriptor
	fd_VirtualAMMInfo_last_restriction_block       protoreflect.FieldDescriptor
	fd_VirtualAMMInfo_cumulative_premium_fractions protoreflect.FieldDescriptor
)

func init() {
	file_derivatives_state_proto_init()
	md_VirtualAMMInfo = File_derivatives_state_proto.Messages().ByName("VirtualAMMInfo")
	fd_VirtualAMMInfo_pair = md_VirtualAMMInfo.Fields().ByName("pair")
	fd_VirtualAMMInfo_last_restriction_block = md_VirtualAMMInfo.Fields().ByName("last_restriction_block")
	fd_VirtualAMMInfo_cumulative_premium_fractions = md_VirtualAMMInfo.Fields().ByName("cumulative_premium_fractions")
}

var _ protoreflect.Message = (*fastReflection_VirtualAMMInfo)(nil)

type fastReflection_VirtualAMMInfo VirtualAMMInfo

func (x *VirtualAMMInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualAMMInfo)(x)
}

func (x *VirtualAMMInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_derivatives_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualAMMInfo_messageType fastReflection_VirtualAMMInfo_messageType
var _ protoreflect.MessageType = fastReflection_VirtualAMMInfo_messageType{}

type fastReflection_VirtualAMMInfo_messageType struct{}

func (x fastReflection_VirtualAMMInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualAMMInfo)(nil)
}
func (x fastReflection_VirtualAMMInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualAMMInfo)
}
func (x fastReflection_VirtualAMMInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualAMMInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualAMMInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualAMMInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualAMMInfo) Type() protoreflect.MessageType {
	return _fastReflection_VirtualAMMInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualAMMInfo) New() protoreflect.Message {
	return new(fastReflection_VirtualAMMInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualAMMInfo) Interface() protoreflect.ProtoMessage {
	return (*VirtualAMMInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualAMMInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pair != "" {
		value := protoreflect.ValueOfString(x.Pair)
		if !f(fd_VirtualAMMInfo_pair, value) {
			return
		}
	}
	if x.LastRestrictionBlock != int64(0) {
		value := protoreflect.ValueOfInt64(x.LastRestrictionBlock)
		if !f(fd_VirtualAMMInfo_last_restriction_block, value) {
			return
		}
	}
	if len(x.CumulativePremiumFractions) != 0 {
		value := protoreflect.ValueOfList(&_VirtualAMMInfo_3_list{list: &x.CumulativePremiumFractions})
		if !f(fd_VirtualAMMInfo_cumulative_premium_fractions, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualAMMInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "matrix.derivatives.v1.VirtualAMMInfo.pair":
		return x.Pair != ""
	case "matrix.derivatives.v1.VirtualAMMInfo.last_restriction_block":
		return x.LastRestrictionBlock != int64(0)
	case "matrix.derivatives.v1.VirtualAMMInfo.cumulative_premium_fractions":
		return len(x.CumulativePremiumFractions) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.VirtualAMMInfo"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.VirtualAMMInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualAMMInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "matrix.derivatives.v1.VirtualAMMInfo.pair":
		x.Pair = ""
	case "matrix.derivatives.v1.VirtualAMMInfo.last_restriction_block":
		x.LastRestrictionBlock = int64(0)
	case "matrix.derivatives.v1.VirtualAMMInfo.cumulative_premium_fractions":
		x.CumulativePremiumFractions = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.VirtualAMMInfo"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.VirtualAMMInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualAMMInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "matrix.derivatives.v1.VirtualAMMInfo.pair":
		value := x.Pair
		return protoreflect.ValueOfString(value)
	case "matrix.derivatives.v1.VirtualAMMInfo.last_restriction_block":
		value := x.LastRestrictionBlock
		return protoreflect.ValueOfInt64(value)
	case "matrix.derivatives.v1.VirtualAMMInfo.cumulative_premium_fractions":
		if len(x.CumulativePremiumFractions) == 0 {
			return protoreflect.ValueOfList(&_VirtualAMMInfo_3_list{})
		}
		listValue := &_VirtualAMMInfo_3_list{list: &x.CumulativePremiumFractions}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.VirtualAMMInfo"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.VirtualAMMInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualAMMInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "matrix.derivatives.v1.VirtualAMMInfo.pair":
		x.Pair = value.Interface().(string)
	case "matrix.derivatives.v1.VirtualAMMInfo.last_restriction_block":
		x.LastRestrictionBlock = value.Int()
	case "matrix.derivatives.v1.VirtualAMMInfo.cumulative_premium_fractions":
		lv := value.List()
		clv := lv.(*_VirtualAMMInfo_3_list)
		x.CumulativePremiumFractions = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.VirtualAMMInfo"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.VirtualAMMInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualAMMInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "matrix.derivatives.v1.VirtualAMMInfo.cumulative_premium_fractions":
		if x.CumulativePremiumFractions == nil {
			x.CumulativePremiumFractions = []string{}
		}
		value := &_VirtualAMMInfo_3_list{list: &x.CumulativePremiumFractions}
		return protoreflect.ValueOfList(value)
	case "matrix.derivatives.v1.VirtualAMMInfo.pair":
		panic(fmt.Errorf("field pair of message matrix.derivatives.v1.VirtualAMMInfo is not mutable"))
	case "matrix.derivatives.v1.VirtualAMMInfo.last_restriction_block":
		panic(fmt.Errorf("field last_restriction_block of message matrix.derivatives.v1.VirtualAMMInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.VirtualAMMInfo"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.VirtualAMMInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualAMMInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "matrix.derivatives.v1.VirtualAMMInfo.pair":
		return protoreflect.ValueOfString("")
	case "matrix.derivatives.v1.VirtualAMMInfo.last_restriction_block":
		return protoreflect.ValueOfInt64(int64(0))
	case "matrix.derivatives.v1.VirtualAMMInfo.cumulative_premium_fractions":
		list := []string{}
		return protoreflect.ValueOfList(&_VirtualAMMInfo_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: matrix.derivatives.v1.VirtualAMMInfo"))
		}
		panic(fmt.Errorf("message matrix.derivatives.v1.VirtualAMMInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualAMMInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in matrix.derivatives.v1.VirtualAMMInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualAMMInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualAMMInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualAMMInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualAMMInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualAMMInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Pair)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LastRestrictionBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.LastRestrictionBlock))
		}
		if len(x.CumulativePremiumFractions) > 0 {
			for _, s := range x.CumulativePremiumFractions {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualAMMInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CumulativePremiumFractions) > 0 {
			for iNdEx := len(x.CumulativePremiumFractions) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.CumulativePremiumFractions[iNdEx])
				copy(dAtA[i:], x.CumulativePremiumFractions[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CumulativePremiumFractions[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.LastRestrictionBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastRestrictionBlock))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Pair) > 0 {
			i -= len(x.Pair)
			copy(dAtA[i:], x.Pair)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pair)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualAMMInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualAMMInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualAMMInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pair", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pair = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastRestrictionBlock", wireType)
				}
				x.LastRestrictionBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastRestrictionBlock |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CumulativePremiumFractions", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CumulativePremiumFractions = append(x.CumulativePremiumFractions, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: derivatives/state.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stopped identifies if the derivatives exchange is stopped or not
	Stopped bool `protobuf:"varint,1,opt,name=stopped,proto3" json:"stopped,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_derivatives_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_derivatives_state_proto_rawDescGZIP(), []int{0}
}

func (x *Params) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

// Position identifies a user position in a given pair.
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address identifies the address owner of this position
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// pair identifies the pair associated with this position
	Pair                                string `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	Size                                string `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`                                                                                                                // signed int
	Margin                              string `protobuf:"bytes,4,opt,name=margin,proto3" json:"margin,omitempty"`                                                                                                            // int
	OpenNotional                        string `protobuf:"bytes,5,opt,name=open_notional,json=openNotional,proto3" json:"open_notional,omitempty"`                                                                            // int
	LastUpdateCumulativePremiumFraction string `protobuf:"bytes,6,opt,name=last_update_cumulative_premium_fraction,json=lastUpdateCumulativePremiumFraction,proto3" json:"last_update_cumulative_premium_fraction,omitempty"` // int
	LiquidityHistoryIndex               int64  `protobuf:"varint,7,opt,name=liquidity_history_index,json=liquidityHistoryIndex,proto3" json:"liquidity_history_index,omitempty"`
	BlockNumber                         int64  `protobuf:"varint,8,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_derivatives_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_derivatives_state_proto_rawDescGZIP(), []int{1}
}

func (x *Position) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Position) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Position) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Position) GetMargin() string {
	if x != nil {
		return x.Margin
	}
	return ""
}

func (x *Position) GetOpenNotional() string {
	if x != nil {
		return x.OpenNotional
	}
	return ""
}

func (x *Position) GetLastUpdateCumulativePremiumFraction() string {
	if x != nil {
		return x.LastUpdateCumulativePremiumFraction
	}
	return ""
}

func (x *Position) GetLiquidityHistoryIndex() int64 {
	if x != nil {
		return x.LiquidityHistoryIndex
	}
	return 0
}

func (x *Position) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type VirtualAMMInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair                       string   `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	LastRestrictionBlock       int64    `protobuf:"varint,2,opt,name=last_restriction_block,json=lastRestrictionBlock,proto3" json:"last_restriction_block,omitempty"`
	CumulativePremiumFractions []string `protobuf:"bytes,3,rep,name=cumulative_premium_fractions,json=cumulativePremiumFractions,proto3" json:"cumulative_premium_fractions,omitempty"`
}

func (x *VirtualAMMInfo) Reset() {
	*x = VirtualAMMInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_derivatives_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualAMMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualAMMInfo) ProtoMessage() {}

// Deprecated: Use VirtualAMMInfo.ProtoReflect.Descriptor instead.
func (*VirtualAMMInfo) Descriptor() ([]byte, []int) {
	return file_derivatives_state_proto_rawDescGZIP(), []int{2}
}

func (x *VirtualAMMInfo) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *VirtualAMMInfo) GetLastRestrictionBlock() int64 {
	if x != nil {
		return x.LastRestrictionBlock
	}
	return 0
}

func (x *VirtualAMMInfo) GetCumulativePremiumFractions() []string {
	if x != nil {
		return x.CumulativePremiumFractions
	}
	return nil
}

var File_derivatives_state_proto protoreflect.FileDescriptor

var file_derivatives_state_proto_rawDesc = []byte{
	0x0a, 0x17, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x2e, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x1d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2c, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x3a, 0x08, 0xfa, 0x9e, 0xd3, 0x8e, 0x03, 0x02, 0x08, 0x01, 0x22, 0xd4, 0x02,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x54, 0x0a, 0x27, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x23, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x17, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x18, 0xf2, 0x9e, 0xd3, 0x8e,
	0x03, 0x12, 0x0a, 0x0e, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2c, 0x70, 0x61,
	0x69, 0x72, 0x18, 0x02, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x41, 0x4d, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x40, 0x0a, 0x1c, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x3a, 0x10, 0xf2, 0x9e, 0xd3, 0x8e, 0x03, 0x0a, 0x0a, 0x06, 0x0a, 0x04, 0x70,
	0x61, 0x69, 0x72, 0x18, 0x03, 0x42, 0xd8, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x2e, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x42, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x44, 0x61, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3b, 0x64,
	0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d,
	0x44, 0x58, 0xaa, 0x02, 0x15, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x5c, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x21, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x5c, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x3a,
	0x3a, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_derivatives_state_proto_rawDescOnce sync.Once
	file_derivatives_state_proto_rawDescData = file_derivatives_state_proto_rawDesc
)

func file_derivatives_state_proto_rawDescGZIP() []byte {
	file_derivatives_state_proto_rawDescOnce.Do(func() {
		file_derivatives_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_derivatives_state_proto_rawDescData)
	})
	return file_derivatives_state_proto_rawDescData
}

var file_derivatives_state_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_derivatives_state_proto_goTypes = []interface{}{
	(*Params)(nil),         // 0: matrix.derivatives.v1.Params
	(*Position)(nil),       // 1: matrix.derivatives.v1.Position
	(*VirtualAMMInfo)(nil), // 2: matrix.derivatives.v1.VirtualAMMInfo
}
var file_derivatives_state_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_derivatives_state_proto_init() }
func file_derivatives_state_proto_init() {
	if File_derivatives_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_derivatives_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_derivatives_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_derivatives_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualAMMInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_derivatives_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_derivatives_state_proto_goTypes,
		DependencyIndexes: file_derivatives_state_proto_depIdxs,
		MessageInfos:      file_derivatives_state_proto_msgTypes,
	}.Build()
	File_derivatives_state_proto = out.File
	file_derivatives_state_proto_rawDesc = nil
	file_derivatives_state_proto_goTypes = nil
	file_derivatives_state_proto_depIdxs = nil
}
