syntax = "proto3";

package nibiru.perp.v1;

import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package="github.com/NibiruChain/nibiru/x/perp/types";

// Msg defines the x/perp Msg service.
service Msg {

  rpc RemoveMargin(MsgRemoveMargin) returns (MsgRemoveMarginResponse) {
    option (google.api.http).post = "/nibiru/perp/remove_margin";
  }

  rpc AddMargin(MsgAddMargin) returns (MsgAddMarginResponse) {
    option (google.api.http).post = "/nibiru/perp/add_margin";
  }

  /* ClosePositions is a transaction that closes all open positions for a trader
     on the specified virtual pool. */
  rpc ClosePositions(MsgClosePositions) returns (MsgClosePositionsResponse) {
    option (google.api.http).post = "/nibiru/perp/add_margin";
  }
}

// -------------------------- RemoveMargin --------------------------

/* MsgRemoveMargin: Msg to remove margin. */
message MsgRemoveMargin {
  string sender = 1;
  string token_pair = 2;
  cosmos.base.v1beta1.Coin margin = 3 [(gogoproto.nullable) = false];
}

message MsgRemoveMarginResponse {
  // MarginOut: tokens transferred back to the trader
  cosmos.base.v1beta1.Coin margin_out = 1 [(gogoproto.nullable) = false];
  string funding_payment = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];
}

// -------------------------- AddMargin --------------------------

/* MsgAddMargin: Msg to remove margin. */
message MsgAddMargin {
  string sender = 1;
  string token_pair = 2;
  cosmos.base.v1beta1.Coin margin = 3 [(gogoproto.nullable) = false];
}

message MsgAddMarginResponse {
  // MarginOut: tokens transferred back to the trader
}

// -------------------------- Liquidate --------------------------
  
// TODO

// -------------------------- OpenPosition --------------------------

// TODO

// -------------------------- ClosePositions --------------------------

message MsgClosePositions {
  string sender = 1;
  string token_pair = 2;
}

message MsgClosePositionsResponse {
  // outCoin: tokens transferred back to the trader
  cosmos.base.v1beta1.Coin outCoin = 1 [(gogoproto.nullable) = false];
}